{"version":3,"sources":["context/TodoContext.js","components/Content.js","components/TodoHeader.js","components/TodoForm.js","App.js","serviceWorker.js","index.js"],"names":["TodoContext","createContext","TodoProvider","children","useState","activeFilter","setActiveFilter","id","text","completed","values","todos","setTodos","Provider","value","Content","todo","onDestroy","onChange","className","property","type","checked","alt","src","onClick","viewBox","fill","xmlns","fillRule","d","TodoHeader","useContext","todoLeft","filter","initialValues","onSubmit","bag","data","uuidv4","setSubmitting","resetForm","handleChange","handleSubmit","setFieldTouched","errors","touched","isValid","isSubmitting","setFieldValue","placeholder","name","onBlur","length","filtered","TodoForm","updatedData","map","index","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.920082fe.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react';\n\nconst TodoContext = createContext(null);\n\nexport const TodoProvider = ({children}) => {\n    const [activeFilter, setActiveFilter] = useState('all');\n    const [todos, setTodos] = useState([\n        {\n            id: 1,\n            text: \"Test\",\n            completed: false\n        }\n    ]);\n    const values = {\n        todos,\n        setTodos,\n        activeFilter,\n        setActiveFilter\n    };\n    return <TodoContext.Provider value={values}>{children}</TodoContext.Provider>\n};\n\nexport default TodoContext;","import React from \"react\";\n\nconst Content = ({todo, onDestroy, onChange}) => {\n    return(\n        <>\n            <div className=\"bg-gray-100 hover:bg-gray-200 px-8 py-6 flex items-center border-b border-gray-300\">\n                <input property=\"done\"\n                       className=\"cursor-pointer w-6 h-6 rounded\"\n                       type=\"checkbox\"\n                       checked={todo.completed}\n                       onChange={() => onChange(todo.id)} />\n                <div className=\"flex ml-4\">\n                    <img alt={todo.text} src={todo.completed ?\n                        \"https://d1csarkz8obe9u.cloudfront.net/posterpreviews/done-stamp-design-template-f2292c30e3cb5d1a3205b6b34622f023_screen.jpg?ts=1590770841\"\n                        : \"https://i.imgur.com/OvMZBs9.jpg\"\n                    } className=\"w-10 h-10 object-cover rounded object-top\" />\n                    <div className=\"flex flex-col pl-4\">\n                        <h2 className=\"font-medium text-indigo-500 text-sm\">{todo.completed ? \"Done\" : \"Active\"}</h2>\n                        <h3 className=\"text-gray-700 text-sm\">{todo.text}</h3>\n                    </div>\n                </div>\n                <button onClick={() => onDestroy(todo.id)} className=\"text-gray-500 flex items-center text-sm focus:outline-none rounded ml-auto py-2 leading-none\">\n\n                    <svg viewBox=\"0 0 16 16\" className=\"w-8 h-8 mr-2\" fill=\"currentColor\"\n                         xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fillRule=\"evenodd\"\n                              d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n                        <path fillRule=\"evenodd\"\n                              d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n                    </svg>\n                    Delete\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default Content;","import React, {useContext} from \"react\";\n\nimport TodoContext from \"../context/TodoContext\";\nimport { Formik } from \"formik\";\nimport {v4 as uuidv4} from \"uuid\";\n\nconst TodoHeader = () => {\n    const {todos, setTodos , activeFilter, setActiveFilter} = useContext(TodoContext);\n\n    const todoLeft = todos.filter((todo) => !todo.completed);\n\n    const onSubmit = (values, bag) => {\n        const data = {\n            ...values,\n            completed: false,\n            id: uuidv4(),\n        };\n\n        setTodos([data, ...todos]);\n\n        bag.setSubmitting(false);\n        bag.resetForm();\n    };\n    return (\n        <div className=\"p-8 shadow-md relative bg-white\">\n            <div className=\"flex items-center justify-center\">\n                <div className=\"text-indigo-600 font-medium text-2xl ml-3\">Todo App</div>\n            </div>\n\n            <div className=\"mt-6 flex\">\n                <h1 className=\"font-medium text-lg my-2\">Add a new task to the list</h1>\n\n                <div className=\"relative ml-auto flex-1 pl-8 sm:block hidden\">\n                    <Formik\n                        initialValues={{\n                            text: \"\",\n                        }}\n                        onSubmit={onSubmit}\n                    >\n                        {({\n                              values,\n                              handleChange,\n                              handleSubmit,\n                              errors,\n                              touched,\n                              setFieldTouched,\n                              isValid,\n                              isSubmitting,\n                              setFieldValue,\n                          }) => (\n                            <form className=\"h-10\" onSubmit={handleSubmit}>\n                                <input placeholder=\"Add new task\"\n                                       onChange={handleChange(\"text\")}\n                                       name=\"text\"\n                                       value={values.text}\n                                       onBlur={() => setFieldTouched(\"text\")}\n                                       className=\"w-full border rounded border-gray-400 h-full focus:outline-none pl-4 pr-8 text-gray-700 text-sm text-gray-500\"/>\n\n                            </form>\n                        )}\n                    </Formik>\n\n\n                    <svg className=\"w-4 h-4 absolute text-indigo-700 right-0 top-0 mt-3 mr-2 text-gray-500\" viewBox=\"0 0 16 16\"\n                         fill=\"currentColor\"\n                         xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fillRule=\"evenodd\"\n                              d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\"/>\n                        <path fillRule=\"evenodd\"\n                              d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\"/>\n                        <path fillRule=\"evenodd\"\n                              d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                    </svg>\n                </div>\n            </div>\n            <div className=\"mt-6 flex flex justify-center\">\n                <button onClick={() => setActiveFilter('all')}\n                        className={activeFilter === \"all\" ? \"ml-4 bg-indigo-500 text-white py-2 text-sm px-3 rounded focus:outline-none\"\n                            : \"ml-4 text-gray-600 py-2 text-sm px-3 rounded focus:outline-none border border-gray-400\"}>\n                    All ({todos.length})\n                </button>\n                <button onClick={() => setActiveFilter('active')}\n                        className={activeFilter === \"active\" ? \" ml-4 bg-indigo-500 text-white py-2 text-sm px-3 rounded focus:outline-none\"\n                            : \"ml-4 text-gray-600 py-2 text-sm px-3 rounded focus:outline-none border border-gray-400\"}>\n                    Active ({todoLeft.length})\n                </button>\n                <button onClick={() => setActiveFilter('done')}\n                        className={activeFilter === \"done\" ? \"ml-4 bg-indigo-500 text-white py-2 text-sm px-3 rounded focus:outline-none\"\n                            : \"ml-4 text-gray-600 py-2 text-sm px-3 rounded focus:outline-none border border-gray-400\"}>\n                    Done ({todos.length-todoLeft.length})\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoHeader;","import React, {useContext} from \"react\";\nimport Content from \"./Content\";\nimport TodoHeader from \"./TodoHeader\";\nimport TodoContext from \"../context/TodoContext\";\n\nlet filtered = \"test\"\nconst TodoForm = () => {\n    const { todos, setTodos, activeFilter } = useContext(TodoContext);\n\n    const onDestroy = (id) =>\n        setTodos(todos.filter((todo) => todo.id !== id && todo));\n\n    const onChange = (id) => {\n        const updatedData = todos.map((todo) =>\n            todo.id === id ? { ...todo, completed: !todo.completed } : todo\n        );\n\n        setTodos(updatedData);\n    };\n\n    filtered = todos;\n\n    if (activeFilter !== \"all\") {\n        filtered = todos.filter((todo) =>\n            activeFilter === \"active\"\n                ? todo.completed === false && todo\n                : todo.completed === true && todo\n        );\n    }\n    return (\n        <>\n            <div>\n                <div className=\"h-screen w-screen bg-indigo-400 overflow-hidden absolute flex items-center\">\n                    <div className=\"w-screen h-64 absolute top-0 opacity-50 left-0 -my-40 -mx-64 bg-indigo-300 rounded-full\" />\n                    <div className=\"w-64 h-64 -mx-32 bg-indigo-300 opacity-50 rounded-full\" />\n                    <div className=\"w-64 h-64 ml-auto relative opacity-50 -mr-32 bg-indigo-300 rounded-full\" />\n                    <div className=\"w-screen h-64 absolute opacity-50 bottom-0 right-0 -my-40 -mx-64 bg-indigo-300 rounded-full\" />\n                </div>\n                <div className=\"container mx-auto h-screen py-16 px-8 relative\">\n                    <div className=\"flex w-full rounded-lg h-full lg:overflow-hidden overflow-auto lg:flex-row flex-col shadow-2xl\">\n                        <div className=\"w-full bg-white text-gray-800 flex flex-col\">\n                            <TodoHeader onChange={onChange} />\n                            <div className=\"overflow-auto flex-grow\">\n                                {\n                                    filtered.map((todo,index) =>\n                                        <Content todo={todo} key={index}  onChange={onChange} onDestroy={onDestroy}/>\n                                    )\n                                }\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default TodoForm;","import React from 'react';\nimport './main.css';\nimport {TodoProvider} from \"./context/TodoContext\";\nimport TodoForm from \"./components/TodoForm\";\n\nfunction App() {\n  return (\n      <TodoProvider>\n          <TodoForm />\n      </TodoProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}